{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kishoreo\\\\Downloads\\\\CropDelightAdvance-master\\\\CropDelightAdvance-master\\\\Crop-Delight\\\\src\\\\Components\\\\Register\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../Register/RegisterPage.css';\nimport Navigation from '../Navigation/NavigationPage';\nimport Footer from '../Footer/FooterPage';\nimport farmerImage from '../assets/farmer.png';\nimport customerImage from '../assets/customer.png';\nimport workerImage from '../assets/worker.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n  const [userType, setUserType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [farmerName, setFarmerName] = useState('');\n  const [farmerId, setFarmerId] = useState('');\n  const [farmerLicense, setFarmerLicense] = useState(null);\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [addresses, setAddresses] = useState({\n    farmerAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    farmLocationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    shippingAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    },\n    communicationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: ''\n    }\n  });\n  const [workerName, setWorkerName] = useState('');\n  const [skills, setSkills] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [error, setError] = useState('');\n  const [usernameExistsError, setUsernameExistsError] = useState('');\n  const [emailExistsError, setEmailExistsError] = useState('');\n  const [phoneExistsError, setPhoneExistsError] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [sameAddress, setSameAddress] = useState(true);\n  const handleSelectUserType = selectedUserType => {\n    setUserType(selectedUserType);\n    setShowForm(true);\n    setSameAddress(true); // Set default to true for Farmer\n    clearErrors(); // Clear errors when selecting new userType\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    clearErrorByName(name); // Clear error for the specific field\n\n    // Phone number format validation and adjustment\n    if (name === 'phone') {\n      // Remove non-numeric characters from input\n      const phoneNumber = value.replace(/\\D/g, '');\n\n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\n      if (phoneNumber.length === 10) {\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n        setPhone(formattedPhoneNumber);\n      } else {\n        setPhone(value); // If not 10 digits, set as entered\n      }\n    } else {\n      // For other fields, update state normally\n      switch (name) {\n        case 'username':\n          setUsername(value);\n          break;\n        case 'password':\n          setPassword(value);\n          break;\n        case 'confirmPassword':\n          setConfirmPassword(value);\n          break;\n        case 'farmerName':\n          setFarmerName(value);\n          break;\n        case 'farmerId':\n          setFarmerId(value);\n          break;\n        case 'email':\n          setEmail(value);\n          break;\n        case 'workerName':\n          setWorkerName(value);\n          break;\n        case 'skills':\n          setSkills(value);\n          break;\n        case 'customerName':\n          setCustomerName(value);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  const handleAddressChange = (event, addressType) => {\n    const {\n      name,\n      value\n    } = event.target;\n    setAddresses(prevAddresses => ({\n      ...prevAddresses,\n      [addressType]: {\n        ...prevAddresses[addressType],\n        [name]: value\n      }\n    }));\n  };\n  const handleFileChange = event => {\n    setFarmerLicense(event.target.files[0]);\n  };\n  const handleSameAddressChange = event => {\n    const {\n      value\n    } = event.target;\n    setSameAddress(value === 'yes');\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('userType', userType);\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('email', email);\n    formData.append('phone', phone);\n    if (userType === 'Farmer') {\n      formData.append('farmerName', farmerName);\n      formData.append('farmerId', farmerId);\n      formData.append('farmerLicense', farmerLicense);\n      formData.append('addressStreet', addresses.farmerAddress.street);\n      formData.append('addressCity', addresses.farmerAddress.city);\n      formData.append('addressProvince', addresses.farmerAddress.province);\n      formData.append('addressZipCode', addresses.farmerAddress.zipCode);\n      formData.append('sameAddress', sameAddress);\n      if (!sameAddress) {\n        formData.append('farmLocationStreet', addresses.farmLocationAddress.street);\n        formData.append('farmLocationCity', addresses.farmLocationAddress.city);\n        formData.append('farmLocationProvince', addresses.farmLocationAddress.province);\n        formData.append('farmLocationZipCode', addresses.farmLocationAddress.zipCode);\n      }\n    } else if (userType === 'Worker') {\n      formData.append('workerName', workerName);\n      formData.append('skills', skills);\n      formData.append('addressStreet', addresses.communicationAddress.street);\n      formData.append('addressCity', addresses.communicationAddress.city);\n      formData.append('addressProvince', addresses.communicationAddress.province);\n      formData.append('addressZipCode', addresses.communicationAddress.zipCode);\n    } else if (userType === 'Customer') {\n      formData.append('customerName', customerName);\n      formData.append('addressStreet', addresses.shippingAddress.street);\n      formData.append('addressCity', addresses.shippingAddress.city);\n      formData.append('addressProvince', addresses.shippingAddress.province);\n      formData.append('addressZipCode', addresses.shippingAddress.zipCode);\n    }\n\n    // Log FormData entries\n    for (let pair of formData.entries()) {\n      console.log(`${pair[0]}: ${pair[1]}`);\n    }\n    try {\n      const response = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Registration successful:', data);\n        setError('Registration successful');\n        alert('Registration successful');\n        navigate('/login'); // Redirect to login page\n      } else {\n        if (data.message.includes('Username already exists')) {\n          setUsernameExistsError('Username already exists. Please choose a different one.');\n        } else if (data.message.includes('Email already exists')) {\n          setEmailExistsError('Email already exists. Please use a different email.');\n        } else if (data.message.includes('Phone Number already exists')) {\n          setPhoneExistsError('Phone Number already exists. Please use a different phone number.');\n        } else {\n          setError(data.message);\n        }\n      }\n    } catch (error) {\n      setError('Failed to register. Please try again later.');\n    }\n  };\n  const goBackToUserTypeSelection = () => {\n    setShowForm(false);\n    setUserType('');\n    clearErrors(); // Clear errors when going back\n  };\n  const clearErrorByName = name => {\n    switch (name) {\n      case 'username':\n        setUsernameExistsError('');\n        break;\n      case 'email':\n        setEmailExistsError('');\n        break;\n      case 'phone':\n        setPhoneExistsError('');\n        break;\n      default:\n        break;\n    }\n  };\n  const clearErrors = () => {\n    setError('');\n    setUsernameExistsError('');\n    setEmailExistsError('');\n    setPhoneExistsError('');\n  };\n  const renderProvinceOptions = () => {\n    const provinces = ['Alberta', 'British Columbia', 'Manitoba', 'New Brunswick', 'Newfoundland and Labrador', 'Northwest Territories', 'Nova Scotia', 'Nunavut', 'Ontario', 'Prince Edward Island', 'Quebec', 'Saskatchewan', 'Yukon'];\n    return provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: province,\n      children: province\n    }, province, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-page\",\n      children: !showForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"register-heading\",\n          children: \"Register as:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-types\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-type\",\n            onClick: () => handleSelectUserType('Farmer'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: farmerImage,\n              alt: \"Farmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Farmer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-type\",\n            onClick: () => handleSelectUserType('Customer'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: customerImage,\n              alt: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-type\",\n            onClick: () => handleSelectUserType('Worker'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: workerImage,\n              alt: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Worker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Register as \", userType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goBackToUserTypeSelection,\n          className: \"back-button\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"register-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: username,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), usernameExistsError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: usernameExistsError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              value: confirmPassword,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), password !== confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: \"Passwords do not match.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), emailExistsError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: emailExistsError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phone\",\n              children: \"Phone Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              id: \"phone\",\n              name: \"phone\",\n              value: phone,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), phoneExistsError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: phoneExistsError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), userType === 'Farmer' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"farmerName\",\n                children: \"Farmer Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"farmerName\",\n                name: \"farmerName\",\n                value: farmerName,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"farmerId\",\n                children: \"Farmer ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"farmerId\",\n                name: \"farmerId\",\n                value: farmerId,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"farmerLicense\",\n                children: \"Farmer License:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                id: \"farmerLicense\",\n                name: \"farmerLicense\",\n                onChange: handleFileChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Same Address as Farmer Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"radio-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"sameAddress\",\n                    value: \"yes\",\n                    checked: sameAddress === true,\n                    onChange: handleSameAddressChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this), \"Yes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"sameAddress\",\n                    value: \"no\",\n                    checked: sameAddress === false,\n                    onChange: handleSameAddressChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 25\n                  }, this), \"No\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Farmer Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"street\",\n                placeholder: \"Street\",\n                value: addresses.farmerAddress.street,\n                onChange: e => handleAddressChange(e, 'farmerAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"city\",\n                placeholder: \"City\",\n                value: addresses.farmerAddress.city,\n                onChange: e => handleAddressChange(e, 'farmerAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"province\",\n                value: addresses.farmerAddress.province,\n                onChange: e => handleAddressChange(e, 'farmerAddress'),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Province\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this), renderProvinceOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"zipCode\",\n                placeholder: \"Zip Code\",\n                value: addresses.farmerAddress.zipCode,\n                onChange: e => handleAddressChange(e, 'farmerAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 19\n            }, this), !sameAddress && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Farm Location Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"street\",\n                placeholder: \"Street\",\n                value: addresses.farmLocationAddress.street,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"city\",\n                placeholder: \"City\",\n                value: addresses.farmLocationAddress.city,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"province\",\n                value: addresses.farmLocationAddress.province,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Province\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 25\n                }, this), renderProvinceOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"zipCode\",\n                placeholder: \"Zip Code\",\n                value: addresses.farmLocationAddress.zipCode,\n                onChange: e => handleAddressChange(e, 'farmLocationAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), userType === 'Worker' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"workerName\",\n                children: \"Worker Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"workerName\",\n                name: \"workerName\",\n                value: workerName,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"skills\",\n                children: \"Skills:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"skills\",\n                name: \"skills\",\n                value: skills,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Communication Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"street\",\n                placeholder: \"Street\",\n                value: addresses.communicationAddress.street,\n                onChange: e => handleAddressChange(e, 'communicationAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"city\",\n                placeholder: \"City\",\n                value: addresses.communicationAddress.city,\n                onChange: e => handleAddressChange(e, 'communicationAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"province\",\n                value: addresses.communicationAddress.province,\n                onChange: e => handleAddressChange(e, 'communicationAddress'),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Province\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 23\n                }, this), renderProvinceOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"zipCode\",\n                placeholder: \"Zip Code\",\n                value: addresses.communicationAddress.zipCode,\n                onChange: e => handleAddressChange(e, 'communicationAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this), userType === 'Customer' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"customerName\",\n                children: \"Customer Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"customerName\",\n                name: \"customerName\",\n                value: customerName,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Shipping Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"street\",\n                placeholder: \"Street\",\n                value: addresses.shippingAddress.street,\n                onChange: e => handleAddressChange(e, 'shippingAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"city\",\n                placeholder: \"City\",\n                value: addresses.shippingAddress.city,\n                onChange: e => handleAddressChange(e, 'shippingAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"province\",\n                value: addresses.shippingAddress.province,\n                onChange: e => handleAddressChange(e, 'shippingAddress'),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Province\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 23\n                }, this), renderProvinceOptions()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"zipCode\",\n                placeholder: \"Zip Code\",\n                value: addresses.shippingAddress.zipCode,\n                onChange: e => handleAddressChange(e, 'shippingAddress'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"register-button\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"pIAEVV5Vyl5tX5T0MfwZ7wWflIQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Navigation","Footer","farmerImage","customerImage","workerImage","jsxDEV","_jsxDEV","Register","_s","navigate","userType","setUserType","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","farmerName","setFarmerName","farmerId","setFarmerId","farmerLicense","setFarmerLicense","email","setEmail","phone","setPhone","addresses","setAddresses","farmerAddress","street","city","province","zipCode","farmLocationAddress","shippingAddress","communicationAddress","workerName","setWorkerName","skills","setSkills","customerName","setCustomerName","error","setError","usernameExistsError","setUsernameExistsError","emailExistsError","setEmailExistsError","phoneExistsError","setPhoneExistsError","showForm","setShowForm","sameAddress","setSameAddress","handleSelectUserType","selectedUserType","clearErrors","handleChange","event","name","value","target","clearErrorByName","phoneNumber","replace","length","formattedPhoneNumber","slice","handleAddressChange","addressType","prevAddresses","handleFileChange","files","handleSameAddressChange","handleSubmit","preventDefault","formData","FormData","append","pair","entries","console","log","response","fetch","method","body","data","json","ok","alert","message","includes","goBackToUserTypeSelection","renderProvinceOptions","provinces","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","onSubmit","htmlFor","type","id","onChange","required","checked","placeholder","e","_c","$RefreshReg$"],"sources":["C:/Users/Kishoreo/Downloads/CropDelightAdvance-master/CropDelightAdvance-master/Crop-Delight/src/Components/Register/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../Register/RegisterPage.css';\nimport Navigation from '../Navigation/NavigationPage';\nimport Footer from '../Footer/FooterPage';\nimport farmerImage from '../assets/farmer.png';\nimport customerImage from '../assets/customer.png';\nimport workerImage from '../assets/worker.png';\n\nfunction Register() {\n  const navigate = useNavigate();\n  const [userType, setUserType] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [farmerName, setFarmerName] = useState('');\n  const [farmerId, setFarmerId] = useState('');\n  const [farmerLicense, setFarmerLicense] = useState(null);\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [addresses, setAddresses] = useState({\n    farmerAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: '',\n    },\n    farmLocationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: '',\n    },\n    shippingAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: '',\n    },\n    communicationAddress: {\n      street: '',\n      city: '',\n      province: '',\n      zipCode: '',\n    },\n  });\n  const [workerName, setWorkerName] = useState('');\n  const [skills, setSkills] = useState('');\n  const [customerName, setCustomerName] = useState('');\n  const [error, setError] = useState('');\n  const [usernameExistsError, setUsernameExistsError] = useState('');\n  const [emailExistsError, setEmailExistsError] = useState('');\n  const [phoneExistsError, setPhoneExistsError] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [sameAddress, setSameAddress] = useState(true);\n\n  const handleSelectUserType = (selectedUserType) => {\n    setUserType(selectedUserType);\n    setShowForm(true);\n    setSameAddress(true); // Set default to true for Farmer\n    clearErrors(); // Clear errors when selecting new userType\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    clearErrorByName(name); // Clear error for the specific field\n  \n    // Phone number format validation and adjustment\n    if (name === 'phone') {\n      // Remove non-numeric characters from input\n      const phoneNumber = value.replace(/\\D/g, '');\n  \n      // Format the phone number as (xxx)-xxx-xxxx if 10 digits\n      if (phoneNumber.length === 10) {\n        const formattedPhoneNumber = `(${phoneNumber.slice(0, 3)})-${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\n        setPhone(formattedPhoneNumber);\n      } else {\n        setPhone(value); // If not 10 digits, set as entered\n      }\n    } else {\n      // For other fields, update state normally\n      switch (name) {\n        case 'username':\n          setUsername(value);\n          break;\n        case 'password':\n          setPassword(value);\n          break;\n        case 'confirmPassword':\n          setConfirmPassword(value);\n          break;\n        case 'farmerName':\n          setFarmerName(value);\n          break;\n        case 'farmerId':\n          setFarmerId(value);\n          break;\n        case 'email':\n          setEmail(value);\n          break;\n        case 'workerName':\n          setWorkerName(value);\n          break;\n        case 'skills':\n          setSkills(value);\n          break;\n        case 'customerName':\n          setCustomerName(value);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const handleAddressChange = (event, addressType) => {\n    const { name, value } = event.target;\n    setAddresses((prevAddresses) => ({\n      ...prevAddresses,\n      [addressType]: {\n        ...prevAddresses[addressType],\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleFileChange = (event) => {\n    setFarmerLicense(event.target.files[0]);\n  };\n\n  const handleSameAddressChange = (event) => {\n    const { value } = event.target;\n    setSameAddress(value === 'yes');\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append('userType', userType);\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('email', email);\n    formData.append('phone', phone);\n\n    if (userType === 'Farmer') {\n      formData.append('farmerName', farmerName);\n      formData.append('farmerId', farmerId);\n      formData.append('farmerLicense', farmerLicense);\n      formData.append('addressStreet', addresses.farmerAddress.street);\n      formData.append('addressCity', addresses.farmerAddress.city);\n      formData.append('addressProvince', addresses.farmerAddress.province);\n      formData.append('addressZipCode', addresses.farmerAddress.zipCode);\n      formData.append('sameAddress', sameAddress);\n\n      if (!sameAddress) {\n        formData.append('farmLocationStreet', addresses.farmLocationAddress.street);\n        formData.append('farmLocationCity', addresses.farmLocationAddress.city);\n        formData.append('farmLocationProvince', addresses.farmLocationAddress.province);\n        formData.append('farmLocationZipCode', addresses.farmLocationAddress.zipCode);\n      }\n    } else if (userType === 'Worker') {\n      formData.append('workerName', workerName);\n      formData.append('skills', skills);\n      formData.append('addressStreet', addresses.communicationAddress.street);\n      formData.append('addressCity', addresses.communicationAddress.city);\n      formData.append('addressProvince', addresses.communicationAddress.province);\n      formData.append('addressZipCode', addresses.communicationAddress.zipCode);\n    } else if (userType === 'Customer') {\n      formData.append('customerName', customerName);\n      formData.append('addressStreet', addresses.shippingAddress.street);\n      formData.append('addressCity', addresses.shippingAddress.city);\n      formData.append('addressProvince', addresses.shippingAddress.province);\n      formData.append('addressZipCode', addresses.shippingAddress.zipCode);\n    }\n\n    // Log FormData entries\n    for (let pair of formData.entries()) {\n      console.log(`${pair[0]}: ${pair[1]}`);\n    }\n\n    try {\n      const response = await fetch('http://localhost:3000/register', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        console.log('Registration successful:', data);\n        setError('Registration successful');\n        alert('Registration successful');\n        navigate('/login'); // Redirect to login page\n      } else {\n        if (data.message.includes('Username already exists')) {\n          setUsernameExistsError('Username already exists. Please choose a different one.');\n        } else if (data.message.includes('Email already exists')) {\n          setEmailExistsError('Email already exists. Please use a different email.');\n        } else if (data.message.includes('Phone Number already exists')) {\n          setPhoneExistsError('Phone Number already exists. Please use a different phone number.');\n        } else {\n          setError(data.message);\n        }\n      }\n    } catch (error) {\n      setError('Failed to register. Please try again later.');\n    }\n  };\n\n  const goBackToUserTypeSelection = () => {\n    setShowForm(false);\n    setUserType('');\n    clearErrors(); // Clear errors when going back\n  };\n\n  const clearErrorByName = (name) => {\n    switch (name) {\n      case 'username':\n        setUsernameExistsError('');\n        break;\n      case 'email':\n        setEmailExistsError('');\n        break;\n      case 'phone':\n        setPhoneExistsError('');\n        break;\n      default:\n        break;\n    }\n  };\n\n  const clearErrors = () => {\n    setError('');\n    setUsernameExistsError('');\n    setEmailExistsError('');\n    setPhoneExistsError('');\n  };\n\n  const renderProvinceOptions = () => {\n    const provinces = [\n      'Alberta', 'British Columbia', 'Manitoba', 'New Brunswick', 'Newfoundland and Labrador',\n      'Northwest Territories', 'Nova Scotia', 'Nunavut', 'Ontario', 'Prince Edward Island',\n      'Quebec', 'Saskatchewan', 'Yukon'\n    ];\n\n    return provinces.map(province => (\n      <option key={province} value={province}>{province}</option>\n    ));\n  };\n\n  return (\n    <div>\n      <Navigation />\n      <div className=\"register-page\">\n        {!showForm ? (\n          <div>\n            <h1 className=\"register-heading\">Register as:</h1>\n            <div className=\"user-types\">\n              <div className=\"user-type\" onClick={() => handleSelectUserType('Farmer')}>\n                <img src={farmerImage} alt=\"Farmer\" />\n                <h2>Farmer</h2>\n              </div>\n              <div className=\"user-type\" onClick={() => handleSelectUserType('Customer')}>\n                <img src={customerImage} alt=\"Customer\" />\n                <h2>Customer</h2>\n              </div>\n              <div className=\"user-type\" onClick={() => handleSelectUserType('Worker')}>\n                <img src={workerImage} alt=\"Worker\" />\n                <h2>Worker</h2>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"form-container\">\n            <h1>Register as {userType}</h1>\n            <button onClick={goBackToUserTypeSelection} className=\"back-button\">Back</button>\n            <form onSubmit={handleSubmit} className=\"register-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username:</label>\n                <input type=\"text\" id=\"username\" name=\"username\" value={username} onChange={handleChange} required />\n                {usernameExistsError && <div className=\"error\">{usernameExistsError}</div>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password:</label>\n                <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={handleChange} required />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n                <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} required />\n                {password !== confirmPassword && <div className=\"error\">Passwords do not match.</div>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={handleChange} required />\n                {emailExistsError && <div className=\"error\">{emailExistsError}</div>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"phone\">Phone Number:</label>\n                <input type=\"tel\" id=\"phone\" name=\"phone\" value={phone} onChange={handleChange} required />\n                {phoneExistsError && <div className=\"error\">{phoneExistsError}</div>}\n              </div>\n\n              {userType === 'Farmer' && (\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"farmerName\">Farmer Name:</label>\n                    <input type=\"text\" id=\"farmerName\" name=\"farmerName\" value={farmerName} onChange={handleChange} required />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"farmerId\">Farmer ID:</label>\n                    <input type=\"text\" id=\"farmerId\" name=\"farmerId\" value={farmerId} onChange={handleChange} required />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"farmerLicense\">Farmer License:</label>\n                    <input type=\"file\" id=\"farmerLicense\" name=\"farmerLicense\" onChange={handleFileChange} required />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Same Address as Farmer Address:</label>\n                    <div className=\"radio-group\">\n                      <label>\n                        <input type=\"radio\" name=\"sameAddress\" value=\"yes\" checked={sameAddress === true} onChange={handleSameAddressChange} />\n                        Yes\n                      </label>\n                      <label>\n                        <input type=\"radio\" name=\"sameAddress\" value=\"no\" checked={sameAddress === false} onChange={handleSameAddressChange} />\n                        No\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Farmer Address:</label>\n                    <input type=\"text\" name=\"street\" placeholder=\"Street\" value={addresses.farmerAddress.street} onChange={(e) => handleAddressChange(e, 'farmerAddress')} required />\n                    <input type=\"text\" name=\"city\" placeholder=\"City\" value={addresses.farmerAddress.city} onChange={(e) => handleAddressChange(e, 'farmerAddress')} required />\n                    <select name=\"province\" value={addresses.farmerAddress.province} onChange={(e) => handleAddressChange(e, 'farmerAddress')} required>\n                      <option value=\"\">Select Province</option>\n                      {renderProvinceOptions()}\n                    </select>\n                    <input type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" value={addresses.farmerAddress.zipCode} onChange={(e) => handleAddressChange(e, 'farmerAddress')} required />\n                  </div>\n\n                  {!sameAddress && (\n                    <div className=\"form-group\">\n                      <label>Farm Location Address:</label>\n                      <input type=\"text\" name=\"street\" placeholder=\"Street\" value={addresses.farmLocationAddress.street} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required />\n                      <input type=\"text\" name=\"city\" placeholder=\"City\" value={addresses.farmLocationAddress.city} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required />\n                      <select name=\"province\" value={addresses.farmLocationAddress.province} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required>\n                        <option value=\"\">Select Province</option>\n                        {renderProvinceOptions()}\n                      </select>\n                      <input type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" value={addresses.farmLocationAddress.zipCode} onChange={(e) => handleAddressChange(e, 'farmLocationAddress')} required />\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {userType === 'Worker' && (\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"workerName\">Worker Name:</label>\n                    <input type=\"text\" id=\"workerName\" name=\"workerName\" value={workerName} onChange={handleChange} required />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"skills\">Skills:</label>\n                    <textarea id=\"skills\" name=\"skills\" value={skills} onChange={handleChange} required></textarea>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Communication Address:</label>\n                    <input type=\"text\" name=\"street\" placeholder=\"Street\" value={addresses.communicationAddress.street} onChange={(e) => handleAddressChange(e, 'communicationAddress')} required />\n                    <input type=\"text\" name=\"city\" placeholder=\"City\" value={addresses.communicationAddress.city} onChange={(e) => handleAddressChange(e, 'communicationAddress')} required />\n                    <select name=\"province\" value={addresses.communicationAddress.province} onChange={(e) => handleAddressChange(e, 'communicationAddress')} required>\n                      <option value=\"\">Select Province</option>\n                      {renderProvinceOptions()}\n                    </select>\n                    <input type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" value={addresses.communicationAddress.zipCode} onChange={(e) => handleAddressChange(e, 'communicationAddress')} required />\n                  </div>\n                </div>\n              )}\n\n              {userType === 'Customer' && (\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"customerName\">Customer Name:</label>\n                    <input type=\"text\" id=\"customerName\" name=\"customerName\" value={customerName} onChange={handleChange} required />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>Shipping Address:</label>\n                    <input type=\"text\" name=\"street\" placeholder=\"Street\" value={addresses.shippingAddress.street} onChange={(e) => handleAddressChange(e, 'shippingAddress')} required />\n                    <input type=\"text\" name=\"city\" placeholder=\"City\" value={addresses.shippingAddress.city} onChange={(e) => handleAddressChange(e, 'shippingAddress')} required />\n                    <select name=\"province\" value={addresses.shippingAddress.province} onChange={(e) => handleAddressChange(e, 'shippingAddress')} required>\n                      <option value=\"\">Select Province</option>\n                      {renderProvinceOptions()}\n                    </select>\n                    <input type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" value={addresses.shippingAddress.zipCode} onChange={(e) => handleAddressChange(e, 'shippingAddress')} required />\n                  </div>\n                </div>\n              )}\n\n              {error && <div className=\"error\">{error}</div>}\n\n              <button type=\"submit\" className=\"register-button\">Register</button>\n            </form>\n          </div>\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,8BAA8B;AACrC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC;IACzCiC,aAAa,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,mBAAmB,EAAE;MACnBJ,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC;IACDE,eAAe,EAAE;MACfL,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC;IACDG,oBAAoB,EAAE;MACpBN,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EACF,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2C,MAAM,EAAEC,SAAS,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC6C,YAAY,EAAEC,eAAe,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC+C,KAAK,EAAEC,QAAQ,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACmD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACqD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACuD,QAAQ,EAAEC,WAAW,CAAC,GAAGxD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACyD,WAAW,EAAEC,cAAc,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM2D,oBAAoB,GAAIC,gBAAgB,IAAK;IACjD9C,WAAW,CAAC8C,gBAAgB,CAAC;IAC7BJ,WAAW,CAAC,IAAI,CAAC;IACjBE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACtBG,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCC,gBAAgB,CAACH,IAAI,CAAC,CAAC,CAAC;;IAExB;IACA,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB;MACA,MAAMI,WAAW,GAAGH,KAAK,CAACI,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;;MAE5C;MACA,IAAID,WAAW,CAACE,MAAM,KAAK,EAAE,EAAE;QAC7B,MAAMC,oBAAoB,GAAG,IAAIH,WAAW,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAKJ,WAAW,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAIJ,WAAW,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;QAClH1C,QAAQ,CAACyC,oBAAoB,CAAC;MAChC,CAAC,MAAM;QACLzC,QAAQ,CAACmC,KAAK,CAAC,CAAC,CAAC;MACnB;IACF,CAAC,MAAM;MACL;MACA,QAAQD,IAAI;QACV,KAAK,UAAU;UACbhD,WAAW,CAACiD,KAAK,CAAC;UAClB;QACF,KAAK,UAAU;UACb/C,WAAW,CAAC+C,KAAK,CAAC;UAClB;QACF,KAAK,iBAAiB;UACpB7C,kBAAkB,CAAC6C,KAAK,CAAC;UACzB;QACF,KAAK,YAAY;UACf3C,aAAa,CAAC2C,KAAK,CAAC;UACpB;QACF,KAAK,UAAU;UACbzC,WAAW,CAACyC,KAAK,CAAC;UAClB;QACF,KAAK,OAAO;UACVrC,QAAQ,CAACqC,KAAK,CAAC;UACf;QACF,KAAK,YAAY;UACfvB,aAAa,CAACuB,KAAK,CAAC;UACpB;QACF,KAAK,QAAQ;UACXrB,SAAS,CAACqB,KAAK,CAAC;UAChB;QACF,KAAK,cAAc;UACjBnB,eAAe,CAACmB,KAAK,CAAC;UACtB;QACF;UACE;MACJ;IACF;EACF,CAAC;EAED,MAAMQ,mBAAmB,GAAGA,CAACV,KAAK,EAAEW,WAAW,KAAK;IAClD,MAAM;MAAEV,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpClC,YAAY,CAAE2C,aAAa,KAAM;MAC/B,GAAGA,aAAa;MAChB,CAACD,WAAW,GAAG;QACb,GAAGC,aAAa,CAACD,WAAW,CAAC;QAC7B,CAACV,IAAI,GAAGC;MACV;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMW,gBAAgB,GAAIb,KAAK,IAAK;IAClCrC,gBAAgB,CAACqC,KAAK,CAACG,MAAM,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,uBAAuB,GAAIf,KAAK,IAAK;IACzC,MAAM;MAAEE;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAC9BR,cAAc,CAACO,KAAK,KAAK,KAAK,CAAC;EACjC,CAAC;EAED,MAAMc,YAAY,GAAG,MAAOhB,KAAK,IAAK;IACpCA,KAAK,CAACiB,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEtE,QAAQ,CAAC;IACrCoE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEpE,QAAQ,CAAC;IACrCkE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAElE,QAAQ,CAAC;IACrCgE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAExD,KAAK,CAAC;IAC/BsD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEtD,KAAK,CAAC;IAE/B,IAAIhB,QAAQ,KAAK,QAAQ,EAAE;MACzBoE,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE9D,UAAU,CAAC;MACzC4D,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE5D,QAAQ,CAAC;MACrC0D,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE1D,aAAa,CAAC;MAC/CwD,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEpD,SAAS,CAACE,aAAa,CAACC,MAAM,CAAC;MAChE+C,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEpD,SAAS,CAACE,aAAa,CAACE,IAAI,CAAC;MAC5D8C,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEpD,SAAS,CAACE,aAAa,CAACG,QAAQ,CAAC;MACpE6C,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEpD,SAAS,CAACE,aAAa,CAACI,OAAO,CAAC;MAClE4C,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE1B,WAAW,CAAC;MAE3C,IAAI,CAACA,WAAW,EAAE;QAChBwB,QAAQ,CAACE,MAAM,CAAC,oBAAoB,EAAEpD,SAAS,CAACO,mBAAmB,CAACJ,MAAM,CAAC;QAC3E+C,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAEpD,SAAS,CAACO,mBAAmB,CAACH,IAAI,CAAC;QACvE8C,QAAQ,CAACE,MAAM,CAAC,sBAAsB,EAAEpD,SAAS,CAACO,mBAAmB,CAACF,QAAQ,CAAC;QAC/E6C,QAAQ,CAACE,MAAM,CAAC,qBAAqB,EAAEpD,SAAS,CAACO,mBAAmB,CAACD,OAAO,CAAC;MAC/E;IACF,CAAC,MAAM,IAAIxB,QAAQ,KAAK,QAAQ,EAAE;MAChCoE,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE1C,UAAU,CAAC;MACzCwC,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAExC,MAAM,CAAC;MACjCsC,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEpD,SAAS,CAACS,oBAAoB,CAACN,MAAM,CAAC;MACvE+C,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEpD,SAAS,CAACS,oBAAoB,CAACL,IAAI,CAAC;MACnE8C,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEpD,SAAS,CAACS,oBAAoB,CAACJ,QAAQ,CAAC;MAC3E6C,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEpD,SAAS,CAACS,oBAAoB,CAACH,OAAO,CAAC;IAC3E,CAAC,MAAM,IAAIxB,QAAQ,KAAK,UAAU,EAAE;MAClCoE,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEtC,YAAY,CAAC;MAC7CoC,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEpD,SAAS,CAACQ,eAAe,CAACL,MAAM,CAAC;MAClE+C,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEpD,SAAS,CAACQ,eAAe,CAACJ,IAAI,CAAC;MAC9D8C,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEpD,SAAS,CAACQ,eAAe,CAACH,QAAQ,CAAC;MACtE6C,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEpD,SAAS,CAACQ,eAAe,CAACF,OAAO,CAAC;IACtE;;IAEA;IACA,KAAK,IAAI+C,IAAI,IAAIH,QAAQ,CAACI,OAAO,CAAC,CAAC,EAAE;MACnCC,OAAO,CAACC,GAAG,CAAC,GAAGH,IAAI,CAAC,CAAC,CAAC,KAAKA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IACvC;IAEA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEV;MACR,CAAC,CAAC;MAEF,MAAMW,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACfR,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,IAAI,CAAC;QAC7C5C,QAAQ,CAAC,yBAAyB,CAAC;QACnC+C,KAAK,CAAC,yBAAyB,CAAC;QAChCnF,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB,CAAC,MAAM;QACL,IAAIgF,IAAI,CAACI,OAAO,CAACC,QAAQ,CAAC,yBAAyB,CAAC,EAAE;UACpD/C,sBAAsB,CAAC,yDAAyD,CAAC;QACnF,CAAC,MAAM,IAAI0C,IAAI,CAACI,OAAO,CAACC,QAAQ,CAAC,sBAAsB,CAAC,EAAE;UACxD7C,mBAAmB,CAAC,qDAAqD,CAAC;QAC5E,CAAC,MAAM,IAAIwC,IAAI,CAACI,OAAO,CAACC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;UAC/D3C,mBAAmB,CAAC,mEAAmE,CAAC;QAC1F,CAAC,MAAM;UACLN,QAAQ,CAAC4C,IAAI,CAACI,OAAO,CAAC;QACxB;MACF;IACF,CAAC,CAAC,OAAOjD,KAAK,EAAE;MACdC,QAAQ,CAAC,6CAA6C,CAAC;IACzD;EACF,CAAC;EAED,MAAMkD,yBAAyB,GAAGA,CAAA,KAAM;IACtC1C,WAAW,CAAC,KAAK,CAAC;IAClB1C,WAAW,CAAC,EAAE,CAAC;IACf+C,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,MAAMM,gBAAgB,GAAIH,IAAI,IAAK;IACjC,QAAQA,IAAI;MACV,KAAK,UAAU;QACbd,sBAAsB,CAAC,EAAE,CAAC;QAC1B;MACF,KAAK,OAAO;QACVE,mBAAmB,CAAC,EAAE,CAAC;QACvB;MACF,KAAK,OAAO;QACVE,mBAAmB,CAAC,EAAE,CAAC;QACvB;MACF;QACE;IACJ;EACF,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBb,QAAQ,CAAC,EAAE,CAAC;IACZE,sBAAsB,CAAC,EAAE,CAAC;IAC1BE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,mBAAmB,CAAC,EAAE,CAAC;EACzB,CAAC;EAED,MAAM6C,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,SAAS,GAAG,CAChB,SAAS,EAAE,kBAAkB,EAAE,UAAU,EAAE,eAAe,EAAE,2BAA2B,EACvF,uBAAuB,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,sBAAsB,EACpF,QAAQ,EAAE,cAAc,EAAE,OAAO,CAClC;IAED,OAAOA,SAAS,CAACC,GAAG,CAACjE,QAAQ,iBAC3B3B,OAAA;MAAuBwD,KAAK,EAAE7B,QAAS;MAAAkE,QAAA,EAAElE;IAAQ,GAApCA,QAAQ;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqC,CAC3D,CAAC;EACJ,CAAC;EAED,oBACEjG,OAAA;IAAA6F,QAAA,gBACE7F,OAAA,CAACN,UAAU;MAAAoG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdjG,OAAA;MAAKkG,SAAS,EAAC,eAAe;MAAAL,QAAA,EAC3B,CAAC/C,QAAQ,gBACR9C,OAAA;QAAA6F,QAAA,gBACE7F,OAAA;UAAIkG,SAAS,EAAC,kBAAkB;UAAAL,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDjG,OAAA;UAAKkG,SAAS,EAAC,YAAY;UAAAL,QAAA,gBACzB7F,OAAA;YAAKkG,SAAS,EAAC,WAAW;YAACC,OAAO,EAAEA,CAAA,KAAMjD,oBAAoB,CAAC,QAAQ,CAAE;YAAA2C,QAAA,gBACvE7F,OAAA;cAAKoG,GAAG,EAAExG,WAAY;cAACyG,GAAG,EAAC;YAAQ;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtCjG,OAAA;cAAA6F,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACNjG,OAAA;YAAKkG,SAAS,EAAC,WAAW;YAACC,OAAO,EAAEA,CAAA,KAAMjD,oBAAoB,CAAC,UAAU,CAAE;YAAA2C,QAAA,gBACzE7F,OAAA;cAAKoG,GAAG,EAAEvG,aAAc;cAACwG,GAAG,EAAC;YAAU;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC1CjG,OAAA;cAAA6F,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACNjG,OAAA;YAAKkG,SAAS,EAAC,WAAW;YAACC,OAAO,EAAEA,CAAA,KAAMjD,oBAAoB,CAAC,QAAQ,CAAE;YAAA2C,QAAA,gBACvE7F,OAAA;cAAKoG,GAAG,EAAEtG,WAAY;cAACuG,GAAG,EAAC;YAAQ;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtCjG,OAAA;cAAA6F,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENjG,OAAA;QAAKkG,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC7B7F,OAAA;UAAA6F,QAAA,GAAI,cAAY,EAACzF,QAAQ;QAAA;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BjG,OAAA;UAAQmG,OAAO,EAAEV,yBAA0B;UAACS,SAAS,EAAC,aAAa;UAAAL,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjFjG,OAAA;UAAMsG,QAAQ,EAAEhC,YAAa;UAAC4B,SAAS,EAAC,eAAe;UAAAL,QAAA,gBACrD7F,OAAA;YAAKkG,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACzB7F,OAAA;cAAOuG,OAAO,EAAC,UAAU;cAAAV,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3CjG,OAAA;cAAOwG,IAAI,EAAC,MAAM;cAACC,EAAE,EAAC,UAAU;cAAClD,IAAI,EAAC,UAAU;cAACC,KAAK,EAAElD,QAAS;cAACoG,QAAQ,EAAErD,YAAa;cAACsD,QAAQ;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACpGzD,mBAAmB,iBAAIxC,OAAA;cAAKkG,SAAS,EAAC,OAAO;cAAAL,QAAA,EAAErD;YAAmB;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC,eAENjG,OAAA;YAAKkG,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACzB7F,OAAA;cAAOuG,OAAO,EAAC,UAAU;cAAAV,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3CjG,OAAA;cAAOwG,IAAI,EAAC,UAAU;cAACC,EAAE,EAAC,UAAU;cAAClD,IAAI,EAAC,UAAU;cAACC,KAAK,EAAEhD,QAAS;cAACkG,QAAQ,EAAErD,YAAa;cAACsD,QAAQ;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtG,CAAC,eAENjG,OAAA;YAAKkG,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACzB7F,OAAA;cAAOuG,OAAO,EAAC,iBAAiB;cAAAV,QAAA,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1DjG,OAAA;cAAOwG,IAAI,EAAC,UAAU;cAACC,EAAE,EAAC,iBAAiB;cAAClD,IAAI,EAAC,iBAAiB;cAACC,KAAK,EAAE9C,eAAgB;cAACgG,QAAQ,EAAErD,YAAa;cAACsD,QAAQ;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC7HzF,QAAQ,KAAKE,eAAe,iBAAIV,OAAA;cAAKkG,SAAS,EAAC,OAAO;cAAAL,QAAA,EAAC;YAAuB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClF,CAAC,eAENjG,OAAA;YAAKkG,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACzB7F,OAAA;cAAOuG,OAAO,EAAC,OAAO;cAAAV,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrCjG,OAAA;cAAOwG,IAAI,EAAC,OAAO;cAACC,EAAE,EAAC,OAAO;cAAClD,IAAI,EAAC,OAAO;cAACC,KAAK,EAAEtC,KAAM;cAACwF,QAAQ,EAAErD,YAAa;cAACsD,QAAQ;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC5FvD,gBAAgB,iBAAI1C,OAAA;cAAKkG,SAAS,EAAC,OAAO;cAAAL,QAAA,EAAEnD;YAAgB;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE,CAAC,eAENjG,OAAA;YAAKkG,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACzB7F,OAAA;cAAOuG,OAAO,EAAC,OAAO;cAAAV,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5CjG,OAAA;cAAOwG,IAAI,EAAC,KAAK;cAACC,EAAE,EAAC,OAAO;cAAClD,IAAI,EAAC,OAAO;cAACC,KAAK,EAAEpC,KAAM;cAACsF,QAAQ,EAAErD,YAAa;cAACsD,QAAQ;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC1FrD,gBAAgB,iBAAI5C,OAAA;cAAKkG,SAAS,EAAC,OAAO;cAAAL,QAAA,EAAEjD;YAAgB;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE,CAAC,EAEL7F,QAAQ,KAAK,QAAQ,iBACpBJ,OAAA;YAAA6F,QAAA,gBACE7F,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAOuG,OAAO,EAAC,YAAY;gBAAAV,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAChDjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACC,EAAE,EAAC,YAAY;gBAAClD,IAAI,EAAC,YAAY;gBAACC,KAAK,EAAE5C,UAAW;gBAAC8F,QAAQ,EAAErD,YAAa;gBAACsD,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxG,CAAC,eAENjG,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAOuG,OAAO,EAAC,UAAU;gBAAAV,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5CjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACC,EAAE,EAAC,UAAU;gBAAClD,IAAI,EAAC,UAAU;gBAACC,KAAK,EAAE1C,QAAS;gBAAC4F,QAAQ,EAAErD,YAAa;gBAACsD,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClG,CAAC,eAENjG,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAOuG,OAAO,EAAC,eAAe;gBAAAV,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACtDjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACC,EAAE,EAAC,eAAe;gBAAClD,IAAI,EAAC,eAAe;gBAACmD,QAAQ,EAAEvC,gBAAiB;gBAACwC,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/F,CAAC,eAENjG,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAA6F,QAAA,EAAO;cAA+B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9CjG,OAAA;gBAAKkG,SAAS,EAAC,aAAa;gBAAAL,QAAA,gBAC1B7F,OAAA;kBAAA6F,QAAA,gBACE7F,OAAA;oBAAOwG,IAAI,EAAC,OAAO;oBAACjD,IAAI,EAAC,aAAa;oBAACC,KAAK,EAAC,KAAK;oBAACoD,OAAO,EAAE5D,WAAW,KAAK,IAAK;oBAAC0D,QAAQ,EAAErC;kBAAwB;oBAAAyB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,OAEzH;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACRjG,OAAA;kBAAA6F,QAAA,gBACE7F,OAAA;oBAAOwG,IAAI,EAAC,OAAO;oBAACjD,IAAI,EAAC,aAAa;oBAACC,KAAK,EAAC,IAAI;oBAACoD,OAAO,EAAE5D,WAAW,KAAK,KAAM;oBAAC0D,QAAQ,EAAErC;kBAAwB;oBAAAyB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,MAEzH;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENjG,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAA6F,QAAA,EAAO;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9BjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,QAAQ;gBAACsD,WAAW,EAAC,QAAQ;gBAACrD,KAAK,EAAElC,SAAS,CAACE,aAAa,CAACC,MAAO;gBAACiF,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,eAAe,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAClKjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,MAAM;gBAACsD,WAAW,EAAC,MAAM;gBAACrD,KAAK,EAAElC,SAAS,CAACE,aAAa,CAACE,IAAK;gBAACgF,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,eAAe,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5JjG,OAAA;gBAAQuD,IAAI,EAAC,UAAU;gBAACC,KAAK,EAAElC,SAAS,CAACE,aAAa,CAACG,QAAS;gBAAC+E,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,eAAe,CAAE;gBAACH,QAAQ;gBAAAd,QAAA,gBACjI7F,OAAA;kBAAQwD,KAAK,EAAC,EAAE;kBAAAqC,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACxCP,qBAAqB,CAAC,CAAC;cAAA;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC,eACTjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,SAAS;gBAACsD,WAAW,EAAC,UAAU;gBAACrD,KAAK,EAAElC,SAAS,CAACE,aAAa,CAACI,OAAQ;gBAAC8E,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,eAAe,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnK,CAAC,EAEL,CAACjD,WAAW,iBACXhD,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAA6F,QAAA,EAAO;cAAsB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrCjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,QAAQ;gBAACsD,WAAW,EAAC,QAAQ;gBAACrD,KAAK,EAAElC,SAAS,CAACO,mBAAmB,CAACJ,MAAO;gBAACiF,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,qBAAqB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC9KjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,MAAM;gBAACsD,WAAW,EAAC,MAAM;gBAACrD,KAAK,EAAElC,SAAS,CAACO,mBAAmB,CAACH,IAAK;gBAACgF,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,qBAAqB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACxKjG,OAAA;gBAAQuD,IAAI,EAAC,UAAU;gBAACC,KAAK,EAAElC,SAAS,CAACO,mBAAmB,CAACF,QAAS;gBAAC+E,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,qBAAqB,CAAE;gBAACH,QAAQ;gBAAAd,QAAA,gBAC7I7F,OAAA;kBAAQwD,KAAK,EAAC,EAAE;kBAAAqC,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACxCP,qBAAqB,CAAC,CAAC;cAAA;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC,eACTjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,SAAS;gBAACsD,WAAW,EAAC,UAAU;gBAACrD,KAAK,EAAElC,SAAS,CAACO,mBAAmB,CAACD,OAAQ;gBAAC8E,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,qBAAqB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/K,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN,EAEA7F,QAAQ,KAAK,QAAQ,iBACpBJ,OAAA;YAAA6F,QAAA,gBACE7F,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAOuG,OAAO,EAAC,YAAY;gBAAAV,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAChDjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACC,EAAE,EAAC,YAAY;gBAAClD,IAAI,EAAC,YAAY;gBAACC,KAAK,EAAExB,UAAW;gBAAC0E,QAAQ,EAAErD,YAAa;gBAACsD,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxG,CAAC,eAENjG,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAOuG,OAAO,EAAC,QAAQ;gBAAAV,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvCjG,OAAA;gBAAUyG,EAAE,EAAC,QAAQ;gBAAClD,IAAI,EAAC,QAAQ;gBAACC,KAAK,EAAEtB,MAAO;gBAACwE,QAAQ,EAAErD,YAAa;gBAACsD,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5F,CAAC,eAENjG,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAA6F,QAAA,EAAO;cAAsB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrCjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,QAAQ;gBAACsD,WAAW,EAAC,QAAQ;gBAACrD,KAAK,EAAElC,SAAS,CAACS,oBAAoB,CAACN,MAAO;gBAACiF,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,sBAAsB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAChLjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,MAAM;gBAACsD,WAAW,EAAC,MAAM;gBAACrD,KAAK,EAAElC,SAAS,CAACS,oBAAoB,CAACL,IAAK;gBAACgF,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,sBAAsB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC1KjG,OAAA;gBAAQuD,IAAI,EAAC,UAAU;gBAACC,KAAK,EAAElC,SAAS,CAACS,oBAAoB,CAACJ,QAAS;gBAAC+E,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,sBAAsB,CAAE;gBAACH,QAAQ;gBAAAd,QAAA,gBAC/I7F,OAAA;kBAAQwD,KAAK,EAAC,EAAE;kBAAAqC,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACxCP,qBAAqB,CAAC,CAAC;cAAA;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC,eACTjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,SAAS;gBAACsD,WAAW,EAAC,UAAU;gBAACrD,KAAK,EAAElC,SAAS,CAACS,oBAAoB,CAACH,OAAQ;gBAAC8E,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,sBAAsB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,EAEA7F,QAAQ,KAAK,UAAU,iBACtBJ,OAAA;YAAA6F,QAAA,gBACE7F,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAOuG,OAAO,EAAC,cAAc;gBAAAV,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACpDjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACC,EAAE,EAAC,cAAc;gBAAClD,IAAI,EAAC,cAAc;gBAACC,KAAK,EAAEpB,YAAa;gBAACsE,QAAQ,EAAErD,YAAa;gBAACsD,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9G,CAAC,eAENjG,OAAA;cAAKkG,SAAS,EAAC,YAAY;cAAAL,QAAA,gBACzB7F,OAAA;gBAAA6F,QAAA,EAAO;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAChCjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,QAAQ;gBAACsD,WAAW,EAAC,QAAQ;gBAACrD,KAAK,EAAElC,SAAS,CAACQ,eAAe,CAACL,MAAO;gBAACiF,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,iBAAiB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACtKjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,MAAM;gBAACsD,WAAW,EAAC,MAAM;gBAACrD,KAAK,EAAElC,SAAS,CAACQ,eAAe,CAACJ,IAAK;gBAACgF,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,iBAAiB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAChKjG,OAAA;gBAAQuD,IAAI,EAAC,UAAU;gBAACC,KAAK,EAAElC,SAAS,CAACQ,eAAe,CAACH,QAAS;gBAAC+E,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,iBAAiB,CAAE;gBAACH,QAAQ;gBAAAd,QAAA,gBACrI7F,OAAA;kBAAQwD,KAAK,EAAC,EAAE;kBAAAqC,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACxCP,qBAAqB,CAAC,CAAC;cAAA;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC,eACTjG,OAAA;gBAAOwG,IAAI,EAAC,MAAM;gBAACjD,IAAI,EAAC,SAAS;gBAACsD,WAAW,EAAC,UAAU;gBAACrD,KAAK,EAAElC,SAAS,CAACQ,eAAe,CAACF,OAAQ;gBAAC8E,QAAQ,EAAGI,CAAC,IAAK9C,mBAAmB,CAAC8C,CAAC,EAAE,iBAAiB,CAAE;gBAACH,QAAQ;cAAA;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,EAEA3D,KAAK,iBAAItC,OAAA;YAAKkG,SAAS,EAAC,OAAO;YAAAL,QAAA,EAAEvD;UAAK;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAE9CjG,OAAA;YAAQwG,IAAI,EAAC,QAAQ;YAACN,SAAS,EAAC,iBAAiB;YAAAL,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNjG,OAAA,CAACL,MAAM;MAAAmG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAAC/F,EAAA,CA1ZQD,QAAQ;EAAA,QACER,WAAW;AAAA;AAAAsH,EAAA,GADrB9G,QAAQ;AA4ZjB,eAAeA,QAAQ;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}